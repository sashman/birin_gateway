# Elixir CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.1/language-elixir/ for more details
version: 2.1
jobs:
  test:
    docker:
      # specify the version here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - checkout

  push:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: build image --target PROD
          command: docker build . -t sashman/birin_gateway
      - run:
          name: tag latest image
          command: docker tag sashman/birin_gateway sashman/birin_gateway:latest
      - run:
          name: tag verison image
          command: if [[ ! -z $CIRCLE_TAG ]]; then docker tag sashman/birin_gateway sashman/birin_gateway:$CIRCLE_TAG; else exit 0; fi
      - run:
          name: docker login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: push latest image
          command: docker push sashman/birin_gateway:latest
      - run:
          name: push versioned image
          command: if [[ ! -z $CIRCLE_TAG ]]; then docker push sashman/birin_gateway:$CIRCLE_TAG; else exit 0; fi

  deploy:
    docker:
      - image: kroniak/ssh-client
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install  curl
          command: apk --no-cache add curl
      - run:
          name: set up ssh key
          command: |
            mkdir -p ~/.ssh
            chmod 700 ~/.ssh
            echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
            echo -n "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
      # - run: ssh deploy@51.15.209.94 'cd biring_api && git pull'

workflows:
  version: 2
  workflow:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
            tags:
              only: /v?[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/
      - push:
          requires:
            - test
          filters:
            branches:
              only:
                - master
            tags:
              only: /v?[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/
      - deploy:
          requires:
            - push
          filters:
            branches:
              only:
                - master
            tags:
              only: /v?[0-9]{1,}.[0-9]{1,}.[0-9]{1,}/
